"""init tables

Revision ID: 3f4655b2ab50
Revises: 
Create Date: 2019-02-25 02:42:25.292536

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3f4655b2ab50'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_key',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=144), nullable=True),
    sa.Column('email', sa.String(length=144), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('blacklist_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('election',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=144), nullable=True),
    sa.Column('images', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('api_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['api_id'], ['api_key.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('candidate',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=144), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('images', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('api_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('election_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['api_id'], ['api_key.id'], ),
    sa.ForeignKeyConstraint(['election_id'], ['election.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.String(length=144), nullable=True),
    sa.Column('identity_id', sa.String(length=144), nullable=True),
    sa.Column('name', sa.String(length=144), nullable=True),
    sa.Column('msisdn', sa.String(length=12), nullable=True),
    sa.Column('email', sa.String(length=144), nullable=True),
    sa.Column('images', sa.String(length=144), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.Column('api_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('candidate_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['api_id'], ['api_key.id'], ),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('identity_id'),
    sa.UniqueConstraint('msisdn'),
    sa.UniqueConstraint('username')
    )
    op.create_table('vote',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('candidate_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vote')
    op.drop_table('user')
    op.drop_table('candidate')
    op.drop_table('election')
    op.drop_table('blacklist_token')
    op.drop_table('api_key')
    # ### end Alembic commands ###
